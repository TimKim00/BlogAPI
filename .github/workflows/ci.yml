name: Node.js CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install dependencies
      run: npm ci

  test:
    needs: build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: blog_user
          POSTGRES_PASSWORD: RESTfulAPI
          POSTGRES_DB: blogapi
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install dependencies
      run: npm ci

    - name: Install Dockerize
      run: |
        DOCKERIZE_VERSION=v0.6.1
        wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
        sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
        rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz

    - name: Wait for PostgreSQL to start
      run: dockerize -wait tcp://localhost:5432 -timeout 1m

    - name: Run tests
      run: npm test
      env:
        NODE_ENV: test
        SERVER_ADDRESS: localhost

  docker-build-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: yourdockerhubusername/yourapp:${{ github.sha }}
